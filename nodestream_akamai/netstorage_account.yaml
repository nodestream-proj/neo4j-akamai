- implementation: nodestream_akamai.netstorage_account:AkamaiNetstorageAccountExtractor
  arguments:
    base_url: !env 'base_url'
    client_token: !env 'client_token'
    client_secret: !env 'client_secret'
    access_token: !env 'access_token'
    account_key: !env 'account_key'
  annotations:
  - live
  - test
- implementation: nodestream.interpreting:Interpreter
  arguments:
    interpretations:
    - type: source_node
      node_type: akamai_netstorage_account
      normalization:
        do_remove_trailing_dots: true
      key:
        uploadAccountId: !jmespath 'uploadAccountId'
    - type: properties
      properties:
        storageGroupName: !jmespath 'storageGroupName'
        ftpEnabled: !jmespath 'ftpEnabled'
        sshEnabled: !jmespath 'sshEnabled'
        rsyncEnabled: !jmespath 'rsyncEnabled'
        asperaEnabled: !jmespath 'asperaEnabled'
        hasFileManagerAccess: !jmespath 'hasFileManagerAccess'
        hasHttpApiAccess: !jmespath 'hasHttpApiAccess'
    - type: relationship
      node_type: akamai_netstorage_config
      relationship_type: ACCESSES
      key_normalization:
        do_remove_trailing_dots: true
      node_key:
        storageGroupId: !jmespath 'storageGroupId'
      outbound: false
    - type: relationship
      node_type: akamai_netstorage_key
      relationship_type: AUTHORIZED_BY
      key_normalization:
        do_remove_trailing_dots: true
      node_key:
        identity: !jmespath 'identity'
      iterate_on: !jmespath 'combinedKeys[*]'
      node_properties:
        type: !jmespath 'type'
        lastModifiedBy: !jmespath 'lastModifiedBy'
        lastModifiedType: !jmespath 'lastModifiedType'
- implementation: nodestream.databases:GraphDatabaseWriter
  arguments:
    batch_size: 100
    database: !env NEO4J_DATABASE_NAME
    uri: !env NEO4J_ENDPOINT
    username: !env NEO4J_DATABASE_USERNAME
    password: !env NEO4J_DATABASE_PASSWORD